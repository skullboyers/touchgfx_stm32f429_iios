; Listing generated by Microsoft (R) Optimizing Compiler Version 19.25.28614.0 

	TITLE	E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A74F5D0F_Types@hpp DB 01H
__AB47D07E_Unicode@hpp DB 01H
__8B4C2B69_Font@hpp DB 01H
__D9071E66_FontManager@hpp DB 01H
__47A90C35_vcruntime_new@h DB 01H
__1FD1C573_Texts@hpp DB 01H
__745EA44E_TypedText@hpp DB 01H
__BC3D60C0_FontCache@hpp DB 01H
__6B9E985D_ConstFont@hpp DB 01H
__D24C4EAF_GeneratedFont@hpp DB 01H
__47100D37_CachedFont@hpp DB 01H
__7242C389_ctype@h DB 01H
__90A1F774_basetsd@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__3C23D660_guiddef@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__1B9502AC_winuser@h DB 01H
__376EBCA0_winioctl@h DB 01H
__24E9E95F_stdlib@h DB 01H
__2CCBBE23_propidl@h DB 01H
__AD360DAF_oleauto@h DB 01H
__0396F1A5_stralign@h DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__950C6985_Bitmap@hpp DB 01H
__5E77B5E2_FontCache@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?width@GlyphNode@touchgfx@@QBEGXZ		; touchgfx::GlyphNode::width
PUBLIC	?height@GlyphNode@touchgfx@@QBEGXZ		; touchgfx::GlyphNode::height
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getFontHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFontHeight
PUBLIC	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ	; touchgfx::Font::getMinimumTextHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getDataFormatA4@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getDataFormatA4
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	??4Font@touchgfx@@QAEAAV01@ABV01@@Z		; touchgfx::Font::operator=
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ	; touchgfx::TypedText::getFont
PUBLIC	?getFontId@TypedText@touchgfx@@QBEGXZ		; touchgfx::TypedText::getFontId
PUBLIC	?getTextDirection@TypedText@touchgfx@@QBEEXZ	; touchgfx::TypedText::getTextDirection
PUBLIC	?assertValid@TypedText@touchgfx@@ABEXXZ		; touchgfx::TypedText::assertValid
PUBLIC	??0FontCache@touchgfx@@QAE@XZ			; touchgfx::FontCache::FontCache
PUBLIC	?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ; touchgfx::FontCache::setReader
PUBLIC	?clear@FontCache@touchgfx@@QAEX_N@Z		; touchgfx::FontCache::clear
PUBLIC	?setMemory@FontCache@touchgfx@@QAEXPAEI@Z	; touchgfx::FontCache::setMemory
PUBLIC	?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ; touchgfx::FontCache::initializeCachedFont
PUBLIC	?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ; touchgfx::FontCache::cacheString
PUBLIC	?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ; touchgfx::FontCache::cacheLigatures
PUBLIC	?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ; touchgfx::FontCache::getGlyph
PUBLIC	?open@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::open
PUBLIC	?close@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::close
PUBLIC	?contains@FontCache@touchgfx@@ABE_NGG@Z		; touchgfx::FontCache::contains
PUBLIC	?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z	; touchgfx::FontCache::insert
PUBLIC	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ; touchgfx::FontCache::copyGlyph
PUBLIC	?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
PUBLIC	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
PUBLIC	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
PUBLIC	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
PUBLIC	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z	; touchgfx::FontCache::sortSortedString
PUBLIC	?setPosition@FontCache@touchgfx@@AAEXI@Z	; touchgfx::FontCache::setPosition
PUBLIC	?readData@FontCache@touchgfx@@AAEXPAXI@Z	; touchgfx::FontCache::readData
PUBLIC	??1ConstFont@touchgfx@@UAE@XZ			; touchgfx::ConstFont::~ConstFont
PUBLIC	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::ConstFont::operator=
PUBLIC	??1GeneratedFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedFont::~GeneratedFont
PUBLIC	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::GeneratedFont::operator=
PUBLIC	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
PUBLIC	?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ	; touchgfx::CachedFont::getGSUBTable
PUBLIC	?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z	; touchgfx::CachedFont::setGSUBTable
PUBLIC	??1CachedFont@touchgfx@@UAE@XZ			; touchgfx::CachedFont::~CachedFont
PUBLIC	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::CachedFont::operator=
PUBLIC	??_GCachedFont@touchgfx@@UAEPAXI@Z		; touchgfx::CachedFont::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ ; `string'
PUBLIC	??_C@_1PE@CFJBGNGL@?$AAE?$AA?3?$AA?2?$AAs?$AAk?$AAu?$AAl?$AAl?$AA?2?$AAT?$AAo?$AAu?$AAc?$AAh?$AAG@ ; `string'
PUBLIC	??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ ; `string'
PUBLIC	??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@ ; `string'
PUBLIC	??_7CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCachedFont@touchgfx@@@8			; touchgfx::CachedFont `RTTI Type Descriptor'
PUBLIC	??_R3CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CachedFont@touchgfx@@8		; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@GeneratedFont@touchgfx@@8		; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGeneratedFont@touchgfx@@@8		; touchgfx::GeneratedFont `RTTI Type Descriptor'
PUBLIC	??_R3GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ConstFont@touchgfx@@8		; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVConstFont@touchgfx@@@8			; touchgfx::ConstFont `RTTI Type Descriptor'
PUBLIC	??_R3ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Base Class Array'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___wassert:PROC
EXTRN	?strlen@Unicode@touchgfx@@SAGPBG@Z:PROC		; touchgfx::Unicode::strlen
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z:PROC ; touchgfx::GeneratedFont::GeneratedFont
EXTRN	?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z:PROC ; touchgfx::CachedFont::getGlyph
EXTRN	?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getPixelData
EXTRN	?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getKerning
EXTRN	??_ECachedFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::CachedFont::`vector deleting destructor'
EXTRN	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ:PROC ; TypedTextDatabase::getFonts
EXTRN	??0TextProvider@touchgfx@@QAE@XZ:PROC		; touchgfx::TextProvider::TextProvider
EXTRN	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0@Z:PROC ; touchgfx::TextProvider::initialize
EXTRN	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z:PROC ; touchgfx::TextProvider::getNextLigature
EXTRN	?memset@touchgfx@@YAXPAXEI@Z:PROC		; touchgfx::memset
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B:DWORD ; touchgfx::TypedText::typedTexts
EXTRN	?fonts@TypedText@touchgfx@@0PBQBVFont@2@B:DWORD	; touchgfx::TypedText::fonts
EXTRN	?numberOfTypedTexts@TypedText@touchgfx@@0GA:WORD ; touchgfx::TypedText::numberOfTypedTexts
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R2ConstFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8 ; touchgfx::ConstFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R3ConstFont@touchgfx@@8 DD 00H			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVConstFont@touchgfx@@@8
data$r	SEGMENT
??_R0?AVConstFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::ConstFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConstFont@touchgfx@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ConstFont@touchgfx@@8 DD FLAT:??_R0?AVConstFont@touchgfx@@@8 ; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2GeneratedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3GeneratedFont@touchgfx@@8 DD 00H			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratedFont@touchgfx@@@8
data$r	SEGMENT
??_R0?AVGeneratedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::GeneratedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratedFont@touchgfx@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 DD FLAT:??_R0?AVGeneratedFont@touchgfx@@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CachedFont@touchgfx@@8 DD FLAT:??_R0?AVCachedFont@touchgfx@@@8 ; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2CachedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@CachedFont@touchgfx@@8 ; touchgfx::CachedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3CachedFont@touchgfx@@8 DD 00H			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCachedFont@touchgfx@@@8
data$r	SEGMENT
??_R0?AVCachedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::CachedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCachedFont@touchgfx@@', 00H
data$r	ENDS
;	COMDAT ??_R4CachedFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4CachedFont@touchgfx@@6B@ DD 00H			; touchgfx::CachedFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCachedFont@touchgfx@@@8
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$r	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$r	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7CachedFont@touchgfx@@6B@
CONST	SEGMENT
??_7CachedFont@touchgfx@@6B@ DD FLAT:??_R4CachedFont@touchgfx@@6B@ ; touchgfx::CachedFont::`vftable'
	DD	FLAT:??_ECachedFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getDataFormatA4@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
	DD	FLAT:?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
CONST	ENDS
;	COMDAT ??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@
CONST	SEGMENT
??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H
	DB	'O', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 's', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '"', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H
	DB	'I', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H
	DB	'n', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e'
	DB	00H, 'r', 00H, 'O', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 's'
	DB	00H, '.', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
CONST	SEGMENT
??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ DB 'typedTextId la'
	DB	'rger than numberOfTypedTexts.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e'
	DB	00H, 'x', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'h'
	DB	00H, 'a', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, '.', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1PE@CFJBGNGL@?$AAE?$AA?3?$AA?2?$AAs?$AAk?$AAu?$AAl?$AAl?$AA?2?$AAT?$AAo?$AAu?$AAc?$AAh?$AAG@
CONST	SEGMENT
??_C@_1PE@CFJBGNGL@?$AAE?$AA?3?$AA?2?$AAs?$AAk?$AAu?$AAl?$AAl?$AA?2?$AAT?$AAo?$AAu?$AAc?$AAh?$AAG@ DB 'E'
	DB	00H, ':', 00H, '\', 00H, 's', 00H, 'k', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, '\', 00H, 'T', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h'
	DB	00H, 'G', 00H, 'F', 00H, 'X', 00H, '\', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 's', 00H, '\'
	DB	00H, 'i', 00H, 'i', 00H, 'o', 00H, 's', 00H, 's', 00H, '\', 00H
	DB	's', 00H, 't', 00H, 'm', 00H, '3', 00H, '2', 00H, 'f', 00H, '4'
	DB	00H, '2', 00H, '9', 00H, '_', 00H, 't', 00H, 'o', 00H, 'u', 00H
	DB	'c', 00H, 'h', 00H, 'g', 00H, 'f', 00H, 'x', 00H, '_', 00H, 'i'
	DB	00H, 'i', 00H, 'o', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'd', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 'w', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'S', 00H, 'T', 00H, '\', 00H
	DB	't', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g', 00H, 'f'
	DB	00H, 'x', 00H, '\', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'k', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 't', 00H, 'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g'
	DB	00H, 'f', 00H, 'x', 00H, '\', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, '.'
	DB	00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
CONST	SEGMENT
??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ DB 'TypedText dat'
	DB	'abase has not been initialized.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getDataFormatA4@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1Font@touchgfx@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCachedFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCachedFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::CachedFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	48					; 00000030H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCachedFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::CachedFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::CachedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+36]
	mov	WORD PTR [eax+36], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::CachedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CachedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CachedFont@touchgfx@@UAE@XZ PROC			; touchgfx::CachedFont::~CachedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GeneratedFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CachedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::CachedFont::~CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_table$ = 8						; size = 4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z PROC	; touchgfx::CachedFont::setGSUBTable, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\include\fonts\CachedFont.hpp
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __47100D37_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z ENDP	; touchgfx::CachedFont::setGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ PROC	; touchgfx::CachedFont::getGSUBTable, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\include\fonts\CachedFont.hpp
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __47100D37_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@getGSUBTab
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	jmp	SHORT $LN1@getGSUBTab
$LN2@getGSUBTab:
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+44]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getGSUBTab:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ ENDP	; touchgfx::CachedFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
_id$ = 12						; size = 2
__cache$ = 16						; size = 4
__flashFont$ = 20					; size = 4
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z PROC ; touchgfx::CachedFont::CachedFont, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\include\fonts\CachedFont.hpp
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __47100D37_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+34]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, WORD PTR [edx+32]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+31]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+30]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx+29]
	shr	al, 7
	and	al, 1
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx+29]
	and	al, 127					; 0000007fH
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, WORD PTR [ecx+26]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBG@Z ; touchgfx::GeneratedFont::GeneratedFont
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CachedFont@touchgfx@@6B@
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _id$[ebp]
	mov	WORD PTR [eax+36], cx
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __cache$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __flashFont$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ENDP ; touchgfx::CachedFont::CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::GeneratedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::GeneratedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedFont@touchgfx@@UAE@XZ PROC			; touchgfx::GeneratedFont::~GeneratedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ConstFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::GeneratedFont::~GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC		; touchgfx::ConstFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Font@touchgfx@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+20]
	mov	WORD PTR [eax+20], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP		; touchgfx::ConstFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConstFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ConstFont@touchgfx@@UAE@XZ PROC			; touchgfx::ConstFont::~ConstFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConstFont@touchgfx@@UAE@XZ ENDP			; touchgfx::ConstFont::~ConstFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readData@FontCache@touchgfx@@AAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_out$ = 8						; size = 4
_numberOfBytes$ = 12					; size = 4
?readData@FontCache@touchgfx@@AAEXPAXI@Z PROC		; touchgfx::FontCache::readData, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@readData
; Line 375
	mov	esi, esp
	mov	eax, DWORD PTR _numberOfBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@readData:
; Line 377
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?readData@FontCache@touchgfx@@AAEXPAXI@Z ENDP		; touchgfx::FontCache::readData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPosition@FontCache@touchgfx@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?setPosition@FontCache@touchgfx@@AAEXI@Z PROC		; touchgfx::FontCache::setPosition, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 364
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 365
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@setPositio
; Line 367
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setPositio:
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPosition@FontCache@touchgfx@@AAEXI@Z ENDP		; touchgfx::FontCache::setPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortSortedString@FontCache@touchgfx@@AAE_NH@Z
_TEXT	SEGMENT
_temp$1 = -68						; size = 2
_j$2 = -56						; size = 4
_swapped$3 = -41					; size = 1
_i$4 = -32						; size = 4
_uc$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z PROC	; touchgfx::FontCache::sortSortedString, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _uc$[ebp], ecx
; Line 340
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@sortSorted
$LN2@sortSorted:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$4[ebp], eax
	jge	$LN3@sortSorted
; Line 342
	mov	BYTE PTR _swapped$3[ebp], 0
; Line 343
	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN7@sortSorted
$LN5@sortSorted:
	mov	eax, DWORD PTR _j$2[ebp]
	add	eax, 1
	mov	DWORD PTR _j$2[ebp], eax
$LN7@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, DWORD PTR _i$4[ebp]
	sub	eax, 1
	cmp	DWORD PTR _j$2[ebp], eax
	jge	SHORT $LN6@sortSorted
; Line 345
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2+2]
	cmp	edx, eax
	jle	SHORT $LN8@sortSorted
; Line 347
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _temp$1[ebp], dx
; Line 348
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	edx, DWORD PTR _j$2[ebp]
	mov	esi, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [esi+edx*2+2]
	mov	WORD PTR [ecx+eax*2], dx
; Line 349
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR _temp$1[ebp]
	mov	WORD PTR [ecx+eax*2+2], dx
; Line 350
	mov	BYTE PTR _swapped$3[ebp], 1
$LN8@sortSorted:
; Line 352
	jmp	SHORT $LN5@sortSorted
$LN6@sortSorted:
; Line 355
	movzx	eax, BYTE PTR _swapped$3[ebp]
	test	eax, eax
	jne	SHORT $LN9@sortSorted
; Line 357
	jmp	SHORT $LN3@sortSorted
$LN9@sortSorted:
; Line 359
	jmp	$LN2@sortSorted
$LN3@sortSorted:
; Line 360
	mov	al, 1
; Line 361
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ENDP	; touchgfx::FontCache::sortSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
_TEXT	SEGMENT
tv132 = -344						; size = 4
tv86 = -344						; size = 4
_n$ = -132						; size = 4
_ligature$ = -120					; size = 2
_tp$ = -108						; size = 88
_pArg$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_font$ = 12						; size = 4
_t$ = 16						; size = 2
_string$ = 20						; size = 4
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ PROC ; touchgfx::FontCache::createSortedLigatures, COMDAT
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 313
	lea	eax, DWORD PTR _string$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 314
	lea	ecx, DWORD PTR _tp$[ebp]
	call	??0TextProvider@touchgfx@@QAE@XZ	; touchgfx::TextProvider::TextProvider
; Line 315
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0@Z ; touchgfx::TextProvider::initialize
; Line 316
	mov	DWORD PTR _pArg$[ebp], 0
; Line 318
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+44], edx
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+32]
	jae	SHORT $LN4@createSort
; Line 321
	xor	al, al
	jmp	$LN1@createSort
$LN4@createSort:
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	DWORD PTR tv86[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR [edx+44], eax
	xor	ecx, ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	WORD PTR [edx], cx
; Line 324
	mov	DWORD PTR _n$[ebp], 0
$LN2@createSort:
; Line 325
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getTextDirection@TypedText@touchgfx@@QBEEXZ ; touchgfx::TypedText::getTextDirection
	movzx	eax, al
	push	eax
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z ; touchgfx::TextProvider::getNextLigature
	mov	WORD PTR _ligature$[ebp], ax
	movzx	ecx, WORD PTR _ligature$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+32]
	jae	SHORT $LN5@createSort
; Line 329
	xor	al, al
	jmp	SHORT $LN1@createSort
$LN5@createSort:
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 2
	mov	DWORD PTR tv132[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv132[ebp]
	mov	DWORD PTR [edx+44], eax
	mov	ecx, DWORD PTR tv132[ebp]
	mov	dx, WORD PTR _ligature$[ebp]
	mov	WORD PTR [ecx], dx
; Line 332
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 333
	jmp	SHORT $LN2@createSort
$LN3@createSort:
; Line 334
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
$LN1@createSort:
; Line 335
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@createSort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@createSort:
	DD	1
	DD	$LN8@createSort
$LN8@createSort:
	DD	-108					; ffffff94H
	DD	88					; 00000058H
	DD	$LN7@createSort
$LN7@createSort:
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	0
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ENDP ; touchgfx::FontCache::createSortedLigatures
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z
_TEXT	SEGMENT
_uc$ = -44						; size = 4
_n$ = -32						; size = 4
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_string$ = 8						; size = 4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z PROC	; touchgfx::FontCache::createSortedString, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 291
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?strlen@Unicode@touchgfx@@SAGPBG@Z	; touchgfx::Unicode::strlen
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _length$[ebp], ecx
; Line 293
	mov	eax, DWORD PTR _length$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	cmp	edx, DWORD PTR [ecx+32]
	jae	SHORT $LN4@createSort
; Line 297
	xor	al, al
	jmp	SHORT $LN1@createSort
$LN4@createSort:
; Line 299
	mov	DWORD PTR _n$[ebp], 0
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _uc$[ebp], ecx
$LN2@createSort:
; Line 301
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 303
	mov	eax, DWORD PTR _uc$[ebp]
	mov	ecx, DWORD PTR _string$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _uc$[ebp]
	add	eax, 2
	mov	DWORD PTR _uc$[ebp], eax
	mov	ecx, DWORD PTR _string$[ebp]
	add	ecx, 2
	mov	DWORD PTR _string$[ebp], ecx
; Line 304
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 305
	jmp	SHORT $LN2@createSort
$LN3@createSort:
; Line 306
	xor	eax, eax
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	WORD PTR [ecx], ax
; Line 307
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
$LN1@createSort:
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ENDP	; touchgfx::FontCache::createSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
_TEXT	SEGMENT
tv161 = -316						; size = 4
tv88 = -316						; size = 4
_ch$1 = -116						; size = 2
_outOfMemory$ = -101					; size = 1
_firstNewGlyph$ = -92					; size = 4
_last$ = -80						; size = 2
_string$ = -68						; size = 4
_bpp$ = -56						; size = 4
_fontId$ = -44						; size = 2
_dummy$ = -32						; size = 4
_glyphNodeOffset$ = -20					; size = 4
_this$ = -8						; size = 4
_t$ = 8							; size = 2
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z PROC ; touchgfx::FontCache::cacheSortedString, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 140
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 143
	push	4
	lea	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 144
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 145
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 146
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 147
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 149
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 150
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ; touchgfx::TypedText::getFont
	mov	DWORD PTR tv88[ebp], eax
	mov	eax, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	mov	DWORD PTR _bpp$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 153
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+118], ax
; Line 154
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+124], ax
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _string$[ebp], ecx
; Line 157
	xor	eax, eax
	mov	WORD PTR _last$[ebp], ax
; Line 158
	mov	DWORD PTR _firstNewGlyph$[ebp], 0
; Line 159
	mov	BYTE PTR _outOfMemory$[ebp], 0
$LN2@cacheSorte:
; Line 160
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@cacheSorte
; Line 162
	mov	eax, DWORD PTR _string$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _ch$1[ebp], cx
; Line 163
	movzx	eax, WORD PTR _ch$1[ebp]
	movzx	ecx, WORD PTR _last$[ebp]
	cmp	eax, ecx
	je	SHORT $LN4@cacheSorte
; Line 165
	movzx	eax, WORD PTR _fontId$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ch$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?contains@FontCache@touchgfx@@ABE_NGG@Z	; touchgfx::FontCache::contains
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@cacheSorte
; Line 167
	lea	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fontId$[ebp]
	push	edx
	movzx	eax, WORD PTR _ch$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z ; touchgfx::FontCache::insert
; Line 168
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	je	SHORT $LN6@cacheSorte
; Line 170
	jmp	SHORT $LN3@cacheSorte
$LN6@cacheSorte:
; Line 172
	cmp	DWORD PTR _firstNewGlyph$[ebp], 0
	jne	SHORT $LN4@cacheSorte
; Line 174
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _firstNewGlyph$[ebp], edx
$LN4@cacheSorte:
; Line 178
	mov	ax, WORD PTR _ch$1[ebp]
	mov	WORD PTR _last$[ebp], ax
; Line 179
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 2
	mov	DWORD PTR _string$[ebp], eax
; Line 180
	jmp	$LN2@cacheSorte
$LN3@cacheSorte:
; Line 182
	mov	eax, DWORD PTR _firstNewGlyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
; Line 183
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	jne	SHORT $LN9@cacheSorte
	mov	DWORD PTR tv161[ebp], 1
	jmp	SHORT $LN10@cacheSorte
$LN9@cacheSorte:
	mov	DWORD PTR tv161[ebp], 0
$LN10@cacheSorte:
	mov	al, BYTE PTR tv161[ebp]
; Line 184
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@cacheSorte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN15@cacheSorte:
	DD	3
	DD	$LN14@cacheSorte
$LN14@cacheSorte:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@cacheSorte
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@cacheSorte
	DD	-101					; ffffff9bH
	DD	1
	DD	$LN13@cacheSorte
$LN13@cacheSorte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN12@cacheSorte:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN11@cacheSorte:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ENDP ; touchgfx::FontCache::cacheSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z
_TEXT	SEGMENT
_next$1 = -56						; size = 4
_glyphSize$2 = -44					; size = 4
_p$3 = -32						; size = 4
_gn$ = -20						; size = 4
_this$ = -8						; size = 4
_bpp$ = 8						; size = 4
_first$ = 12						; size = 4
?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z PROC ; touchgfx::FontCache::cacheData, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 265
	mov	eax, DWORD PTR _first$[ebp]
	mov	DWORD PTR _gn$[ebp], eax
$LN2@cacheData:
; Line 266
	cmp	DWORD PTR _gn$[ebp], 0
	je	$LN1@cacheData
; Line 268
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR _p$3[ebp], eax
; Line 269
	mov	eax, DWORD PTR _gn$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN4@cacheData
; Line 271
	mov	eax, DWORD PTR _p$3[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _p$3[ebp], eax
; Line 273
	mov	eax, DWORD PTR _p$3[ebp]
	add	eax, 4
	mov	DWORD PTR _p$3[ebp], eax
; Line 276
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _gn$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 277
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?width@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::width
	movzx	esi, ax
	add	esi, 1
	and	esi, -2					; fffffffeH
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?height@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::height
	movzx	eax, ax
	imul	esi, eax
	imul	esi, DWORD PTR _bpp$[ebp]
	shr	esi, 3
	mov	DWORD PTR _glyphSize$2[ebp], esi
; Line 278
	mov	eax, DWORD PTR _glyphSize$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 281
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR [eax], -1
$LN4@cacheData:
; Line 284
	mov	eax, DWORD PTR _gn$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 285
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _gn$[ebp], ecx
; Line 286
	jmp	$LN2@cacheData
$LN1@cacheData:
; Line 287
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ENDP ; touchgfx::FontCache::cacheData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z
_TEXT	SEGMENT
_next$ = -44						; size = 4
_requiredMem$ = -32					; size = 4
_glyphSize$ = -20					; size = 4
_this$ = -8						; size = 4
_top$ = 8						; size = 4
_unicode$ = 12						; size = 2
_font$ = 16						; size = 2
_bpp$ = 20						; size = 4
_outOfMemory$ = 24					; size = 4
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z PROC	; touchgfx::FontCache::copyGlyph, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
$LN2@copyGlyph:
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+118]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+116]
	cmp	ecx, eax
	jge	SHORT $LN3@copyGlyph
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+124]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN3@copyGlyph
; Line 233
	push	14					; 0000000eH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+118]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+118], cx
; Line 235
	jmp	SHORT $LN2@copyGlyph
$LN3@copyGlyph:
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+124]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	je	SHORT $LN4@copyGlyph
; Line 239
	mov	eax, DWORD PTR _top$[ebp]
	jmp	$LN1@copyGlyph
$LN4@copyGlyph:
; Line 243
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	?width@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::width
	movzx	esi, ax
	add	esi, 1
	and	esi, -2					; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	?height@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::height
	movzx	eax, ax
	imul	esi, eax
	imul	esi, DWORD PTR _bpp$[ebp]
	shr	esi, 3
	mov	DWORD PTR _glyphSize$[ebp], esi
; Line 244
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	mov	DWORD PTR _glyphSize$[ebp], eax
; Line 245
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _requiredMem$[ebp], eax
; Line 248
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+44]
	jbe	SHORT $LN5@copyGlyph
; Line 250
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	mov	BYTE PTR [eax], 1
; Line 251
	mov	eax, DWORD PTR _top$[ebp]
	jmp	SHORT $LN1@copyGlyph
$LN5@copyGlyph:
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 120				; 00000078H
	mov	ecx, DWORD PTR _top$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	ax, WORD PTR [eax+12]
	mov	WORD PTR [ecx+12], ax
; Line 257
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$[ebp], eax
; Line 258
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], 0
; Line 259
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	DWORD PTR _top$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _top$[ebp]
$LN1@copyGlyph:
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ENDP	; touchgfx::FontCache::copyGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z
_TEXT	SEGMENT
_old_next$1 = -32					; size = 4
_oldTop$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
_bpp$ = 16						; size = 4
_outOfMemory$ = 20					; size = 4
?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z PROC		; touchgfx::FontCache::insert, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _oldTop$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	movzx	edx, WORD PTR _font$[ebp]
	push	edx
	movzx	eax, WORD PTR _unicode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ; touchgfx::FontCache::copyGlyph
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _oldTop$[ebp]
	jne	SHORT $LN2@insert
; Line 209
	jmp	SHORT $LN1@insert
$LN2@insert:
; Line 212
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*8+4], 0
	jne	SHORT $LN3@insert
; Line 215
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
; Line 216
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 217
	jmp	SHORT $LN1@insert
$LN3@insert:
; Line 221
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _old_next$1[ebp], edx
; Line 222
	mov	eax, DWORD PTR _old_next$1[ebp]
	mov	ecx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 225
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
$LN1@insert:
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z ENDP		; touchgfx::FontCache::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@FontCache@touchgfx@@ABE_NGG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?contains@FontCache@touchgfx@@ABE_NGG@Z PROC		; touchgfx::FontCache::contains, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 188
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@contains:
; Line 189
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@contains
; Line 191
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@contains
; Line 193
	mov	al, 1
	jmp	SHORT $LN1@contains
$LN4@contains:
; Line 195
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 196
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 197
	jmp	SHORT $LN2@contains
$LN3@contains:
; Line 198
	xor	al, al
$LN1@contains:
; Line 199
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?contains@FontCache@touchgfx@@ABE_NGG@Z ENDP		; touchgfx::FontCache::contains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::close, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@close
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@close:
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?open@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?open@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::open, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN1@open
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@open:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?open@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z PROC ; touchgfx::FontCache::getGlyph, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 47
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@getGlyph:
; Line 48
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@getGlyph
; Line 50
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@getGlyph
; Line 52
	mov	eax, DWORD PTR _g$[ebp]
	jmp	SHORT $LN1@getGlyph
$LN4@getGlyph:
; Line 54
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 55
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 56
	jmp	SHORT $LN2@getGlyph
$LN3@getGlyph:
; Line 57
	xor	eax, eax
$LN1@getGlyph:
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ENDP ; touchgfx::FontCache::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
_TEXT	SEGMENT
_result$ = -17						; size = 1
_this$ = -8						; size = 4
_font$ = 8						; size = 4
_t$ = 12						; size = 2
_string$ = 16						; size = 4
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheLigatures, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 128
	push	0
	push	0
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	movzx	ecx, WORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
	add	esp, 24					; 00000018H
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@cacheLigat
; Line 130
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 131
	xor	al, al
	jmp	SHORT $LN1@cacheLigat
$LN2@cacheLigat:
; Line 133
	movzx	eax, WORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR _result$[ebp], al
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 135
	mov	al, BYTE PTR _result$[ebp]
$LN1@cacheLigat:
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheLigatures
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
_TEXT	SEGMENT
_result$ = -17						; size = 1
_this$ = -8						; size = 4
_t$ = 8							; size = 2
_string$ = 12						; size = 4
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheString, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 115
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@cacheStrin
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 118
	xor	al, al
	jmp	SHORT $LN1@cacheStrin
$LN2@cacheStrin:
; Line 120
	movzx	eax, WORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR _result$[ebp], al
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 122
	mov	al, BYTE PTR _result$[ebp]
$LN1@cacheStrin:
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
_TEXT	SEGMENT
tv156 = -336						; size = 4
$T1 = -328						; size = 48
_gsubPosition$2 = -80					; size = 4
_sizeOfGSUB$3 = -68					; size = 4
_flashFont$ = -56					; size = 4
_flashFonts$ = -44					; size = 4
_binaryFontData$ = -32					; size = 4
_fontId$ = -20						; size = 2
_this$ = -8						; size = 4
_t$ = 8							; size = 2
_font$ = 12						; size = 4
_loadGsubTable$ = 16					; size = 1
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z PROC ; touchgfx::FontCache::initializeCachedFont, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 79
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 82
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 85
	push	36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	mov	DWORD PTR _binaryFontData$[ebp], eax
; Line 88
	call	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ ; TypedTextDatabase::getFonts
	mov	DWORD PTR _flashFonts$[ebp], eax
; Line 89
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _flashFonts$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _flashFont$[ebp], edx
; Line 90
	mov	eax, DWORD PTR _flashFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fontId$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	push	ecx
	mov	ecx, DWORD PTR _font$[ebp]
	call	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
; Line 92
	movzx	eax, BYTE PTR _loadGsubTable$[ebp]
	test	eax, eax
	je	$LN2@initialize
; Line 94
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 96
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR _binaryFontData$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _sizeOfGSUB$3[ebp], edx
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, DWORD PTR _sizeOfGSUB$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+36]
	jae	SHORT $LN3@initialize
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _sizeOfGSUB$3[ebp]
	mov	DWORD PTR _gsubPosition$2[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _sizeOfGSUB$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _gsubPosition$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _gsubPosition$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _sizeOfGSUB$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 103
	jmp	SHORT $LN2@initialize
$LN3@initialize:
; Line 106
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@initialize:
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ENDP ; touchgfx::FontCache::initializeCachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMemory@FontCache@touchgfx@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__memory$ = 8						; size = 4
_size$ = 12						; size = 4
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z PROC		; touchgfx::FontCache::setMemory, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __memory$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 37
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@FontCache@touchgfx@@QAEX_N@Z	; touchgfx::FontCache::clear
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z ENDP		; touchgfx::FontCache::setMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@FontCache@touchgfx@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keepGsubTable$ = 8					; size = 1
?clear@FontCache@touchgfx@@QAEX_N@Z PROC		; touchgfx::FontCache::clear, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 20
	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?memset@touchgfx@@YAXPAXEI@Z		; touchgfx::memset
	add	esp, 12					; 0000000cH
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+32], edx
; Line 25
	movzx	eax, BYTE PTR _keepGsubTable$[ebp]
	test	eax, eax
	jne	SHORT $LN1@clear
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], ecx
$LN1@clear:
; Line 30
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?clear@FontCache@touchgfx@@QAEX_N@Z ENDP		; touchgfx::FontCache::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__reader$ = 8						; size = 4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z PROC ; touchgfx::FontCache::setReader, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __reader$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ENDP ; touchgfx::FontCache::setReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FontCache@touchgfx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FontCache@touchgfx@@QAE@XZ PROC			; touchgfx::FontCache::FontCache, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Src\generated\fonts\src\FontCache.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5E77B5E2_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FontCache@touchgfx@@QAE@XZ ENDP			; touchgfx::FontCache::FontCache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assertValid@TypedText@touchgfx@@ABEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?assertValid@TypedText@touchgfx@@ABEXXZ PROC		; touchgfx::TypedText::assertValid, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __745EA44E_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 222
	cmp	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, 0 ; touchgfx::TypedText::typedTexts
	je	SHORT $LN3@assertVali
	mov	eax, OFFSET ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
	test	eax, eax
	jne	SHORT $LN4@assertVali
$LN3@assertVali:
	mov	esi, esp
	push	222					; 000000deH
	push	OFFSET ??_C@_1PE@CFJBGNGL@?$AAE?$AA?3?$AA?2?$AAs?$AAk?$AAu?$AAl?$AAl?$AA?2?$AAT?$AAo?$AAu?$AAc?$AAh?$AAG@
	push	OFFSET ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@assertVali:
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	movzx	edx, WORD PTR ?numberOfTypedTexts@TypedText@touchgfx@@0GA ; touchgfx::TypedText::numberOfTypedTexts
	cmp	ecx, edx
	jge	SHORT $LN5@assertVali
	mov	eax, OFFSET ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
	test	eax, eax
	jne	SHORT $LN1@assertVali
$LN5@assertVali:
	mov	esi, esp
	push	223					; 000000dfH
	push	OFFSET ??_C@_1PE@CFJBGNGL@?$AAE?$AA?3?$AA?2?$AAs?$AAk?$AAu?$AAl?$AAl?$AA?2?$AAT?$AAo?$AAu?$AAc?$AAh?$AAG@
	push	OFFSET ??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@assertVali:
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assertValid@TypedText@touchgfx@@ABEXXZ ENDP		; touchgfx::TypedText::assertValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTextDirection@TypedText@touchgfx@@QBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTextDirection@TypedText@touchgfx@@QBEEXZ PROC	; touchgfx::TypedText::getTextDirection, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __745EA44E_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	mov	al, BYTE PTR [edx+ecx*2+1]
	shr	al, 2
	and	al, 3
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTextDirection@TypedText@touchgfx@@QBEEXZ ENDP	; touchgfx::TypedText::getTextDirection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontId@TypedText@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontId@TypedText@touchgfx@@QBEGXZ PROC		; touchgfx::TypedText::getFontId, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __745EA44E_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 152
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	ax, BYTE PTR [edx+ecx*2]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontId@TypedText@touchgfx@@QBEGXZ ENDP		; touchgfx::TypedText::getFontId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ PROC	; touchgfx::TypedText::getFont, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __745EA44E_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 137
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	eax, BYTE PTR [edx+ecx*2]
	mov	ecx, DWORD PTR ?fonts@TypedText@touchgfx@@0PBQBVFont@2@B ; touchgfx::TypedText::fonts
	mov	eax, DWORD PTR [ecx+eax*4]
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ENDP	; touchgfx::TypedText::getFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Font@touchgfx@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z PROC		; touchgfx::Font::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], dl
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+7]
	and	cl, 127					; 0000007fH
	and	cl, 127					; 0000007fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+7]
	and	al, 128					; 00000080H
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+7], al
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+7]
	shr	cl, 7
	and	cl, 1
	and	cl, 1
	shl	cl, 7
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+7]
	and	al, 127					; 0000007fH
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+7], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+8], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+9]
	mov	BYTE PTR [eax+9], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax+10], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+12], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z ENDP		; touchgfx::Font::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 495
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 496
	xor	eax, eax
; Line 497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 468
	xor	al, al
; Line 469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDataFormatA4@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDataFormatA4@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getDataFormatA4, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 419
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	shr	al, 7
	and	al, 1
; Line 420
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDataFormatA4@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getDataFormatA4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	and	al, 127					; 0000007fH
; Line 406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ PROC	; touchgfx::Font::getMinimumTextHeight, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 390
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	add	eax, edx
; Line 392
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ ENDP	; touchgfx::Font::getMinimumTextHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontHeight@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFontHeight, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
; Line 376
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontHeight@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFontHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+12]
; Line 267
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+10]
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 232
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 233
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 234
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _glyph$[ebp]
; Line 236
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@getGlyph:
	DD	2
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@getGlyph
$LN4@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN3@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 193
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1Font@touchgfx@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1Font@touchgfx@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1Font@touchgfx@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?height@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?height@GlyphNode@touchgfx@@QBEGXZ PROC			; touchgfx::GlyphNode::height, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	and	ecx, 16					; 00000010H
	je	SHORT $LN3@height
	mov	DWORD PTR tv68[ebp], 256		; 00000100H
	jmp	SHORT $LN4@height
$LN3@height:
	mov	DWORD PTR tv68[ebp], 0
$LN4@height:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+7]
	or	eax, DWORD PTR tv68[ebp]
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?height@GlyphNode@touchgfx@@QBEGXZ ENDP			; touchgfx::GlyphNode::height
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?width@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?width@GlyphNode@touchgfx@@QBEGXZ PROC			; touchgfx::GlyphNode::width, COMDAT
; _this$ = ecx
; File E:\skull\TouchGFX\Projects\iioss\stm32f429_touchgfx_iios\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __8B4C2B69_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	and	ecx, 8
	je	SHORT $LN3@width
	mov	DWORD PTR tv68[ebp], 256		; 00000100H
	jmp	SHORT $LN4@width
$LN3@width:
	mov	DWORD PTR tv68[ebp], 0
$LN4@width:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+6]
	or	eax, DWORD PTR tv68[ebp]
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?width@GlyphNode@touchgfx@@QBEGXZ ENDP			; touchgfx::GlyphNode::width
_TEXT	ENDS
END
